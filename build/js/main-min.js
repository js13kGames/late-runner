function startGame(){window.game=new GameModel;game.initialiseViews();window.touchRadius=35}function mapValue(e,t,n,r,i){var s=n-t;var o=i-r;return(e-t)/s*o+r}window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}();var GameModel=function(){console.log("New game initialised");this.levels=[];for(var e=0;e<globalLevelData.levels.length;e++){var t=new LevelModel(globalLevelData.levels[e]);this.levels.push(t)}this.currentLevelIndex=0;this.currentLevel=this.levels[this.currentLevelIndex];this.initialiseViews=function(){this.view=new GameView(this);this.view.level.initialise();this.view.loop()};this.activateSwitch=function(e){if(this.currentLevel.switches[e]){var t=this.currentLevel.switches[e].connectedDoors;for(var n=0;n<t.length;n++){var r=this.currentLevel.doors[t[n]];r.position=r.position=="open"?"closed":"open"}}};this.onKeyPressed=function(e){var t=parseInt(e)||-1;if(t!=-1){this.activateSwitch(t-1)}else{if(e=="u"){if(this.currentLevelIndex+1<this.levels.length){this.currentLevelIndex++;this.currentLevel=this.levels[this.currentLevelIndex];this.view.setupLevelView();this.view.level.initialise()}}if(e=="d"){if(this.currentLevelIndex-1>=0){this.currentLevelIndex--;this.currentLevel=this.levels[this.currentLevelIndex];this.view.setupLevelView();this.view.level.initialise()}}}}};var GameView=function(e){this.model=e;this.initialise=function(){console.log("Initialising game view");var e=this;var t=document.getElementById("gameCanvas");this.height=t.height;this.width=t.width;this.context=t.getContext("2d");document.onkeypress=function(t){var n=t.which||t.keyCode;e.model.onKeyPressed(String.fromCharCode(n))};t.onclick=function(n){var r=t.offsetLeft;var i=e.level.getClickedSwitch(n.clientX-r,n.clientY);if(i>-1){e.model.activateSwitch(i)}};this.pixelSize=5;this.setupLevelView()};this.loop=function(){window.requestAnimFrame(this.loop,this);this.render()}.bind(this);this.render=function(){var e=document.getElementById("levelNumber");e.innerHTML=this.model.currentLevelIndex+1;this.context.clearRect(0,0,this.width,this.height);this.level.render()};this.setupLevelView=function(){this.level=new LevelView(this.model.currentLevel)};this.initialise()};var LevelModel=function(e){this.initialise=function(e){this.switches=e.switches;this.doors=e.doors};this.initialise(e)};var LevelView=function(e){this.model=e;this.initialise=function(){this.doorPositions=[];this.switchPositions=[];for(var e=0;e<this.model.doors.length;e++){this.doorPositions.push(mapValue(e+1,0,this.model.doors.length+1,0,game.view.width))}for(var e=0;e<this.model.switches.length;e++){this.switchPositions.push(this.doorPositions[this.model.switches[e].position]-50)}};this.getClickedSwitch=function(e,t){for(var n=0;n<this.switchPositions.length;n++){currentX=this.switchPositions[n];console.log(currentX);if(currentX<e+touchRadius&&currentX>e-touchRadius){return n}}return-1};this.render=function(){var e=game.view.context;e.fillStyle="#111111";for(var t=0;t<this.model.doors.length;t++){var n=this.model.doors[t];if(n.position=="closed"){e.fillRect(this.doorPositions[t],0,game.view.pixelSize*3,game.view.height)}else{e.fillRect(this.doorPositions[t],0,game.view.pixelSize*3,game.view.pixelSize*3);e.fillRect(this.doorPositions[t],game.view.height-game.view.pixelSize*3,game.view.pixelSize*3,game.view.pixelSize*3)}}for(var t=0;t<this.model.switches.length;t++){var r=this.model.switches[t];e.fillRect(this.switchPositions[t]-game.view.pixelSize,game.view.height/2-game.view.pixelSize*2,game.view.pixelSize*2,game.view.pixelSize);e.fillRect(this.switchPositions[t]-game.view.pixelSize*2,game.view.height/2-game.view.pixelSize,game.view.pixelSize*4,game.view.pixelSize);e.fillRect(this.switchPositions[t]-game.view.pixelSize*2,game.view.height/2,game.view.pixelSize*4,game.view.pixelSize);e.fillRect(this.switchPositions[t]-game.view.pixelSize,game.view.height/2+game.view.pixelSize,game.view.pixelSize*2,game.view.pixelSize)}}};var PlayerView=function(){};var globalLevelData={levels:[{switches:[{connectedDoors:[0],position:0}],doors:[{position:"closed"}]},{switches:[{connectedDoors:[0,1],position:0},{connectedDoors:[0,1],position:1}],doors:[{position:"closed"},{position:"open"}]},{switches:[{connectedDoors:[0,1,2],position:0},{connectedDoors:[1],position:1}],doors:[{position:"closed"},{position:"open"},{position:"closed"}]},{switches:[{connectedDoors:[2,1],position:0},{connectedDoors:[1],position:1}],doors:[{position:"open"},{position:"closed"},{position:"closed"}]}]}